<?php

namespace App\Admin\Controllers;

use App\Events\UpdatedLivraisonEvent;
use App\Models\Client;
use App\Models\Commune;
use App\Models\Livraison;
use App\Models\Livreur;
use Encore\Admin\Controllers\AdminController;
use Encore\Admin\Form;
use Encore\Admin\Grid;
use Encore\Admin\Layout\Content;
use Encore\Admin\Show;

class LivraisonController extends AdminController
{
    /**
     * Title for current resource.
     *
     * @var string
     */
    protected $title = 'Livraison';

    public function index(Content $content)
    {
        return parent::index($content); // TODO: Change the autogenerated stub
    }


    /**
     * Make a grid builder.
     *
     * @return Grid
     */
    protected function grid()
    {
        $grid = new Grid(new Livraison());

        $grid->column('id', __('Id'));
        $grid->column('livreur.nom', __('Livreur'));
        $grid->column('client.nom', __('Client'));
        $grid->column('recepteur.nom', __('Recepteur'));
        $grid->column('status', __('Status'))->display(function($status){
            switch ($status){
                case 0:
                    return "<span class='badge badge-primary'>commandé<span/>";
                    break;
                case 1:
                    return "<span class='badge badge-info'>recuperé<span/>";
                    break;
                case 2:
                    return "<span class='badge badge-info'>livré<span/>";
                    break;
                case 3:
                    return "<span class='badge badge-success'>validé<span/>";
                    break;
                case 4:
                    return "<span class='badge badge-danger'>annulé<span/>";
                    break;
                default:
                    return "<span class='badge danger'>bizarre<span/>";
                    break;

            }
        });
        $grid->column('frais', __('Frais'));
        $grid->quickSearch('created_at');

        return $grid;
    }

    /**
     * Make a show builder.
     *
     * @param mixed $id
     * @return Show
     */
    protected function detail($id)
    {
        $show = new Show(Livraison::findOrFail($id));

        $show->field('id', __('Id'));
        $show->field('created_at', __('Crée à'));
        $show->field('updated_at', __('Modifié à'));
        $show->field('livreur.nom', __('Livreur'));
        $show->field('client.nom', __('Client'));
        $show->field('recepteur.nom', __('Recepteur'));
        $show->field('status', __('Status'));
        $show->field('prodiut_nom', __('Nom du produit'));
        $show->field('frais', __('Frais'));
        $show->field('produit_prix', __('Prix du produit'));

        return $show;
    }

    /**
     * Make a form builder.
     *
     * @return Form
     */
    protected function form()
    {
        $form = new Form(new Livraison());

        $form->number('user_id', __('User id'));
        $form->select('livreur_id', __('Livreur'))->options(Livreur::all()->pluck('nom','id'));
        $form->select('client_id', __('Client'))->options(Client::all()->pluck('nom','id'));
        $form->text('recepteur.nom', 'Nom du recepteur');
        $form->mobile('recepteur.contact','Contact du recepteur')->options([
            'mask'=>'99 999 999'
        ]);
        $form->select('recepteur.commune_id','Commune du recepteur')
            ->options(Commune::all()->pluck('nom','id'))
            ->when('!=', 0, function(Form $form){
                $form->number('frais')->value(1000);
            });
        $form->select('status', __('Status'))->options([
            0=>"commandé",
            1=>"recuperé",
            2=>"livré",
            3=>"reglé",
            4=>"annulé",
        ]);
        $form->textarea('prodiut_nom', __('Nom de description du produit'));
        $form->number('produit_prix', __('Prix du produit'));


        return $form;
    }

    public function update($id)
    {
        $data = parent::update($id);
        $livraison = Livraison::find($id);
        event(new UpdatedLivraisonEvent($livraison));
        return $data;
    }


}
